1. Write 100-200 words on a high-level product description. Essential questions:
  a. What’s the topic area?
    Explore Cambridge Public Art

  b. What’s the functional scope?
    Show a browsable, zoomable map of the city of Cambridge with public art installations marked on the map. Upon tapping on a marked spot, which represents an art installation. The user will be taken to a detailed page of the art piece.

  c. What makes it useful?
    I think what makes it useful is that serves a niche audience that does not have a way to search for such a thing. Meaning that I don't know of an easy way to browse the public art installations in Cambridge. And hopefully, if the API proves to be accurate, I will be able to update the data whenever there are any changes with the installations.

  d. What features must exist for the App to make any sense (aim to complete these for sure)?
    For sure the most important thing is the data. It must be accurate and cover most if not all of the art installation, I found an API in the city of Cambridge website. And according to that website, the data is accurate as of Nov 19, 2016. Which is not that long ago. Also, while I'm thinking that I would only need to implement two or three different views, navigation between these views needs to be seamless.

  e. What additional features are you thinking about and how realistic are they given your experience thus far in iOS development?
    Ok, so since this app will dependent on the data set that I acquired from city, it will obviously be outdated unless I manually update it. So, I was thinking of two solutions to this problem, each of them is more ambitious than the other. The first is to write a script that will check the data in the city's website and if the data has been updated, scrape the new data and plug it in the data model. The second would be to include a community feature, where community members would be able to comment, add or remove art installations. Now the problem with idea is that I would have to support the app with a back end server and that would be a lot more work and could be costly.

    Moreover, I would like to expand to more public amenities and community facilities. Such as parks, bike repair stations and other things, however, this would mean that I would have to find new sources of data and perhaps have to constantly update and maintain the data.

    Lastly, a little bit more achievable is that I would like to create a small note section and maybe a switch section where the user can write their own notes and toggle the switch if they have been to that art installation before.

2. What kits and iOS functionality will you need besides UIKit, especially that we haven’t covered yet? For example:
  a. MapKit: For sure I would need to use a map API. And while I dislike apple maps, I read a lot about how much easier it is to develop with MapKit when compared to the Google Maps SDK.
  b. NSUserDefaults: For keeping user persistence locally.

3. How will it involve (describe functionally, not just ticking a box?
  a. Navigation? (required: UINavigationController, custom segues, or UITabViewController)
    Navigation will be a big part of this application, since the user will be able to ask for directions to a specific art installation.

  b. Persistence? (required: Storing and retrieving data with NSCoder, NSUserDefaults, or to a
  remote (web-based) data store)
    For persistence, I will need have the data model conform to NSCoder and NSObject. Then to encode the data with I would have to use NSData and store it with NSUserDefaults. Similarly for decoding.

  c. Background tasks off the main thread? (required)
    The app would have to keep track of the location of the user even if the user is using one of the detail pages that do not include a map.

  d. Custom views or images? (required)
    In the list view which loads all the art installations in a table and upon clicking on any of them the user would be taken to the detailed art installation page. The cells for the table would be custom views where the first line would be bold and would have the installation's name and the second line would be italic and of a smaller size and would have the first few words of the description of the art size.

  e. Physical sensing, such as acceleration or GPS (optional)
    I can't think for a way to implement this in my project.

4. How many and which classes do you plan to use for data model? What is the planned core representation for each? Distinct real-world pieces should probably be in separate classes.
  There would be four classes:
    The first would be the artist, it would have the following properties: {String: firstName, String: lastName, String: gender}. While I'm not sure if I should include gender or not, it is included in the dataset and I'm including it mainly because the dataset has no other information about the artists.
    The second would be location, it would have these properties: {String: locationNameOfSite, String: locationDescription, String: coordinateX. String: coordinateY}
    The third class would be the art piece, it would contain these properties: {Location: location, Artist: artist, String: Title, String: year, String: description}. More properties could be added, however, I think these are fine for now.
    Lastly, the class that will bring it all together, would have a dictionary with the key being the title of the art work and the value would be an object of the art piece. However, I am a little bit worried about this, since as of right now, there are no two art pieces with the same title, however, it is not an inherently unique property, so I don't know if i should change it.

5. Create a Storyboard for your project. It should include all scenes that you plan to implement, and the navigation that will connect them. It’s OK if your segues aren’t the correct type or aren’t labeled yet, as long as they’re all there.
